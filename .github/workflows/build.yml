name: Build and Release

on:
  push:
    tags:
      - "v*"  # Runs the workflow when a tag like v1.0.0 is pushed

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]  # Run on both Ubuntu and Windows
        python-version: ["3.11"]  # Set the Python version
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint pyinstaller

      - name: Package Application (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          pyinstaller --noconfirm --onefile --windowed --add-data="finance.db:." app.py
          mkdir release
          cp dist/app release/
          cp finance.db release/
          cd release && zip -r packaged_app-linux.zip * && cd ..

      - name: Package Application (Windows)
        if: runner.os == 'Windows'
        run: |
          pyinstaller --noconfirm --onefile --windowed --add-data="finance.db;." app.py
          mkdir release
          copy dist\app.exe release\
          copy finance.db release\
          cd release && powershell Compress-Archive -Path * -DestinationPath packaged_app-windows.zip && cd ..

      - name: Upload Release Asset (Ubuntu)
        if: runner.os == 'Linux'
        uses: softprops/action-gh-release@v1
        with:
          files: release/packaged_app-linux.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset (Windows)
        if: runner.os == 'Windows'
        uses: softprops/action-gh-release@v1
        with:
          files: release/packaged_app-windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
